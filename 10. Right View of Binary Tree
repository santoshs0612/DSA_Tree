Given a Binary Tree, find Right view of it. Right view of a Binary Tree is set of nodes visible when tree is viewed from right side.

Right view of following tree is 1 3 7 8.

          1
       /     \
     2        3
   /   \      /    \
  4     5   6    7
    \
     8

Example 1:

Input:
       1
    /    \
   3      2
Output: 1 2
Example 2:

Input:
     10
    /   \
  20     30
 /   \
40  60 
Output: 10 30 60


class Solution
{
    public:
    void right_view_uti(Node* root,int level,vector<int>& ans)
    {
        if(root==NULL)
        {
            return;
        }
        if(ans.size()==level)
        {
            ans.push_back(root->data);
        }
        right_view_uti(root->right,level+1,ans);
        right_view_uti(root->left,level+1,ans);
        return;
    }
    //Function to return list containing elements of right view of binary tree.
    vector<int> rightView(Node *root)
    {
       // Your Code here
       vector<int> ans;
       right_view_uti(root,0,ans);
       return ans;
    }
};
