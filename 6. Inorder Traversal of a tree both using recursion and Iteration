Given a Binary Tree, find the In-Order Traversal of it.

Example 1:

Input:
       1
     /  \
    3    2
Output: 3 1 2

Example 2:

Input:
        10
     /      \ 
    20       30 
  /    \    /
 40    60  50
Output: 40 20 60 10 50 30


   and a pointer to right child
struct Node {
    int data;
    Node *left;
    Node *right;

    Node(int val) {
        data = val;
        left = right = NULL;
    }
}; */

class Solution {
  public:
    void solver(Node* root, vector<int> &ans)
    {
        if(root==NULL)
        {
            return;
        }
        
        solver(root->left,ans);
        ans.push_back(root->data);
        solver(root->right,ans);
    }
    // Function to return a list containing the inorder traversal of the tree.
    vector<int> inOrder(Node* root) {
        // Your code here
        /////////////////
        // Recursion 
        /////////////////
        
        // vector<int> ans;
        
        // solver(root,ans);
        // return ans;
        
        /////////////////////
        // Iterative 
        /////////////////////
        
        // extra O(n) Space
        
        stack<Node*> s;
        vector<int> ans;
        while(!s.empty() || root!=NULL)
        {
            if(root!=NULL)
            {
                s.push(root);
                root=root->left;
            }
            else {
                root = s.top();
                s.pop();
                ans.push_back(root->data);
                root=root->right;
            }
        }
        
        return ans;
        
    }
};
