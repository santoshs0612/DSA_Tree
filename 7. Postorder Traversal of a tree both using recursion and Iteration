Given a binary tree, find the Postorder Traversal of it.
For Example, the postorder traversal of the following tree is:
5 10 39 1

        1
     /     \
   10     39
  /
5


Example 1:

Input:
        19
     /     \
    10      8
  /    \
 11    13
Output: 11 13 10 8 19
Example 2:

Input:
          11
         /
       15
      /
     7
Output: 7 15 11





void solver(Node* root, vector<int> &ans)
{
    if(root==NULL)
    {
        return;
    }
    solver(root->left,ans);
    solver(root->right,ans);
    ans.push_back(root->data);
}
//Function to return a list containing the postorder traversal of the tree.
vector <int> postOrder(Node* root)
{
  // Your code here
  /////////////////
  // Recursive 
  /////////////////
  
//   vector<int>  ans;
  
//   solver(root,ans);
//   return ans;


////////////////////
// Iterative 
///////////////////

vector<int> ans;
stack<Node*> s;
s.push(root);
while(!s.empty())
{
    
    Node* curr = s.top();
    s.pop();
    ans.push_back(curr->data);
    if(curr->left!=NULL)
    {
        s.push(curr->left);
    }
    if(curr->right!=NULL)
    {
        s.push(curr->right);
    }
}
reverse(ans.begin(),ans.end());
return ans;
  
}
